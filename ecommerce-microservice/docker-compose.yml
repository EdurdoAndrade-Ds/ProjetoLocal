services:
  app:
    container_name: ecommerce_app
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - 8080:8080
    environment:
      - DATABASE_URL=jdbc:postgresql://postgres:5432/ecommerce
      - DATABASE_USERNAME=postgres
      - DATABASE_PASSWORD=postgres
      - JWT_SECRET=ecommerce-secret-key-2024
      - JWT_EXPIRATION=86400000
      - PORT=8080
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - ecommerce_network
    restart: always

  postgres:
    container_name: ecommerce_postgres
    image: postgres:latest
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=ecommerce
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d ecommerce"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - ecommerce_network
    restart: always

  pgadmin:
    container_name: ecommerce_pgadmin
    image: dpage/pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@ecommerce.com
      - PGADMIN_DEFAULT_PASSWORD=admin123
    ports:
      - 5050:80
    depends_on:
      - postgres
    networks:
      - ecommerce_network
    restart: always

networks:
  ecommerce_network:
    driver: bridge

volumes:
  postgres_data:

